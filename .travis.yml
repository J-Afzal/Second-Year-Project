# .travis.yml
# Modified travis script that generates and submits doxygen documentation
dist: trusty
sudo: required
language: cpp
complier: gcc
branches:
  except:
    - gh-pages
    - RefreshedMoose/2019_GROUP_33
    - wagosme/2019_GROUP_33
    - Ambelc/2019_GROUP_33

# Modify these variables that will be used in generateDocumentationAndDep.sh
# (see below). They tell Doxygen where to find the source on and were to send 
# the generated Documentation
env:
  global:
    - GH_REPO_NAME: 2019_GROUP_33
    - DOXYFILE: $TRAVIS_BUILD_DIR/Doxyfile
    - GH_REPO_REF: github.com/warrior1601/2019_GROUP_33.git

# The virtual machines created by Travis do not by default have doxygen
# installed. This is fortunately not difficult on a Debian flavoured Linux
# system.

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - doxygen
      - graphviz
      - gcc-6
      - g++-6
      - cmake

# Build your code
script:
  # Link gcc-6 and g++-6 to their standard commands
#  - ln -s /usr/bin/gcc-6 /usr/local/bin/gcc
#  - ln -s /usr/bin/g++-6 /usr/local/bin/g++
  # Export CC and CXX to tell cmake which compiler to use
  - export CC=/usr/bin/gcc-6
  - export CXX=/usr/bin/g++-6
  # Check versions of gcc, g++ and cmake
  - gcc -v && g++ -v && cmake --version
  # Run your build commands next
  - mkdir build
  - cd build
  - cmake ../model
  - make
#  - make test

# After successfully building and testing your software we give Doxygen the
# instruction to scan the code for docstrings and generate the html output.
# The bulk of these instructions is encapsulated in a script.

after_success:
  - cd $TRAVIS_BUILD_DIR
  - pwd
  - ls
  - chmod +x generateDocumentationAndDeploy.sh
  - ./generateDocumentationAndDeploy.sh