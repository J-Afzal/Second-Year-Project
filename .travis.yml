# .travis.yml
# Modified travis script that generates and submits doxygen documentation
language: cpp
os: windows
env:
  - MSBUILD_PATH="C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\MSBuild\15.0\Bin"
  - CMAKE_PREFIX_PATH="C:\Qt\5.12.5\msvc2017_64\bin"
  - QT_QMAKE_EXECUTABLE="C:\Qt\5.12.5\msvc2017_64\bin\qmake.exe"
sudo: false

branches:
  except:
    - gh-pages
    - RefreshedMoose/2019_GROUP_33
    - wagosme/2019_GROUP_33
    - Ambelc/2019_GROUP_33

# Modify these variables that will be used in generateDocumentationAndDep.sh
# (see below). They tell Doxygen where to find the source on and were to send 
# the generated Documentation

env:
  global:
    - GH_REPO_NAME: 2019_GROUP_33
    - DOXYFILE: $TRAVIS_BUILD_DIR/Doxyfile
    - GH_REPO_REF: github.com/warrior1601/2019_GROUP_33.git

# The virtual machines created by Travis do not by default have doxygen
# installed. This is fortunately not difficult on a Debian flavoured Linux
# system.

addons:
  apt:
    packages:
      - doxygen
      - graphviz

# Build your code
script:
  - export PATH=$MSBUILD_PATH:$PATH
  - export PATH=$CMAKE_PREFIX_PATH:$PATH
  - export PATH=$QT_QMAKE_EXECUTABLE:$PATH

  - mkdir build
  - cd build
  - cmake -G "Visual Studio 15 2017 Win64" ../model_viewer
  - msbuild model_viewer.sln
#  - make test

# After successfully building and testing your software we give Doxygen the
# instruction to scan the code for docstrings and generate the html output.
# The bulk of these instructions is encapsulated in a script.

after_success:
  - cd $TRAVIS_BUILD_DIR
  - pwd
  - ls
  - chmod +x generateDocumentationAndDeploy.sh
  - ./generateDocumentationAndDeploy.sh